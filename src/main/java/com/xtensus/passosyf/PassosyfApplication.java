package com.xtensus.passosyf;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

// @SpringBootApplication : point d'entrÃ©e principal de l'application Spring Boot
@SpringBootApplication
public class PassosyfApplication implements CommandLineRunner {

	// ðŸ”¸ AVANT : Logger basÃ© sur une classe non cohÃ©rente (ex: Document.class)
	// ðŸ”¸ APRÃˆS : Logger correctement associÃ© Ã  la classe actuelle â†’ respect du SRP
	// et traÃ§abilitÃ© cohÃ©rente
	private static final Logger log = LoggerFactory.getLogger(PassosyfApplication.class);

	// ðŸ”¸ AVANT : Appel direct Ã  un service (StartupService) dans run()
	// ðŸ”¸ APRÃˆS : Injection de StartupFacade â†’ respect du patron GoF Facade +
	// meilleure sÃ©paration des responsabilitÃ©s
	@Autowired
	private StartupFacade startupFacade;

	public static void main(String[] args) {
		SpringApplication.run(PassosyfApplication.class, args);
	}

	@Override
	public void run(String... args) {
		// ðŸ”¸ AVANT : MÃ©thode vide, sans logique d'exÃ©cution
		// ðŸ”¸ APRÃˆS : Ajout d'un log de dÃ©marrage + dÃ©lÃ©gation vers la faÃ§ade de
		// dÃ©marrage
		log.info("ðŸš€ Passosyf is starting...(from Main)");
		startupFacade.initialize(); // Utilisation du patron GoF - Facade pour centraliser la logique de dÃ©marrage
	}
}
