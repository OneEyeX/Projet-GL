package com.xtensus.passosyf.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.xtensus.passosyf.entities.TypeSalle;
import com.xtensus.passosyf.gnl.aop.LogClass;
import com.xtensus.passosyf.services.TypeSalleService;


@CrossOrigin
@RestController
@RequestMapping(path = "SalleType")
public class TypeSalleControler {

	@Autowired
	private TypeSalleService typeSalleService;
	
	@Autowired
	private LogClass logClass;
	
	@GetMapping(path = "/listetypesalle") 
	public List<TypeSalle> getListeTypeSalle() {
		 List<TypeSalle> listeTypeSalle=typeSalleService.getListTypeSalle();
		 logClass.addTrack(
					"consultation","Evénement de log consultation list type salle ",/*vb.getPerson(),*/ "INFO");
			
		 return listeTypeSalle;
	}
	
	
	@PostMapping(path = "ajoutsalletype")
	public ResponseEntity<TypeSalle> save(@RequestBody TypeSalle typeSalle) {		
		TypeSalle savedTypeSalle=typeSalleService.save(typeSalle);
		logClass.addTrack(
				"ajout","Evénement de log ajout type salle "+savedTypeSalle.getTypesalleid()+"-"+savedTypeSalle.getTypesallelibelle(),/*vb.getPerson(),*/ "INFO");
		
		return new ResponseEntity<>(savedTypeSalle,HttpStatus.CREATED);
	}
	
	
	@PutMapping(path = "modifsalletype")
	public ResponseEntity<TypeSalle> updateTypeSalle(@RequestBody TypeSalle typeSalle) {		
		TypeSalle salleType=typeSalleService.update(typeSalle);
		logClass.addTrack(
				"modification","Evénement de log modification type salle "+salleType.getTypesalleid()+"-"+salleType.getTypesallelibelle(),/*vb.getPerson(),*/ "INFO");
		return new ResponseEntity<>(salleType,HttpStatus.OK);
	}
	
	@DeleteMapping(path = "deletetypesalle/{idT}")
	public void deleteTypeSalle(@PathVariable(name = "idT") Integer TypeSalleId) {
		TypeSalle typeSalleById = typeSalleService.findTypeSalleById(TypeSalleId); 
		typeSalleService.deleteById(TypeSalleId);
		logClass.addTrack(
				"suppression","Evénement de log suppression type salle "+typeSalleById.getTypesalleid()+"-"+typeSalleById.getTypesallelibelle(),/*vb.getPerson(),*/ "INFO");
	}
	
	@GetMapping(path = "findtypesalle/{idT}")
	public ResponseEntity<TypeSalle> findTypeSalleByID(@PathVariable(name = "idT") Integer TypeSalleId) {
		TypeSalle salleType=typeSalleService.findTypeSalleById(TypeSalleId);
		logClass.addTrack(
				"consultation","Evénement de log consultation type salle "+salleType.getTypesalleid()+"-"+salleType.getTypesallelibelle(),/*vb.getPerson(),*/ "INFO");
		return  new ResponseEntity<>(salleType,HttpStatus.OK);
	}
	
}
