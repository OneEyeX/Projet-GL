package com.xtensus.passosyf.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.xtensus.passosyf.entities.ReunionType;
import com.xtensus.passosyf.services.ReunionTypeService;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping(path = "ReunionType")
public class ReunionTypeControlleur {
	
	@Autowired
	private ReunionTypeService reunionTypeService;
 
//	public ReunionTypeControlleur() {
//		
//	}
	
	
//public ReunionTypeControlleur(ReunionTypeService reunionTypeService) {
//		this.reunionTypeService=reunionTypeService;
//	}
	@GetMapping(value = "/reunionTypes", produces = "application/json")
	public List<ReunionType> getAllReunionTypes() {
		return reunionTypeService.findAllReunionTypes();
	}
	
	@GetMapping(value = "/findreunionType/{id}", produces = "application/json")
	public ReunionType getReunionTypeByID(@PathVariable int id) {
		return reunionTypeService.findById(id);
	}
	
	@PostMapping(value = "/saveReunionType", produces = "application/json")
	public void saveReunionTypes(@RequestBody ReunionType reunionType) {
		reunionTypeService.saveReunionTypes(reunionType);
	}
	
	@PutMapping(value = "/editReunionType", produces = "application/json")
	public void editReunionType(@RequestBody ReunionType reunionType) {
		reunionTypeService.saveReunionTypes(reunionType);
	}
	
	@DeleteMapping(value = "/deleteReunionType/{reunionTypeId}", produces = "application/json")
	public void deleteReunionType(@PathVariable int reunionTypeId) {
		reunionTypeService.deleteReunionTypes(reunionTypeId);
	}
	
	

}
