package com.xtensus.passosyf.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.xtensus.passosyf.entities.DocumentCategorie;
import com.xtensus.passosyf.entities.DocumentTypeCategorie;
import com.xtensus.passosyf.gnl.aop.LogClass;
import com.xtensus.passosyf.services.DocumentCategorieService;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping(path = "DocumentCategorie")
public class DocumentCategorieControlleur {
	
	@Autowired
	private DocumentCategorieService documentCategorieDao;


@Autowired
	private LogClass logClass;


	@GetMapping(value="/documentCategories",  produces = "application/json")
	public Iterable<DocumentCategorie> getAllDocumentCategories(){
        		logClass.addTrack(
				"consultation","Evénement de log consultation list document categories ",/*vb.getPerson(),*/ "INFO");
			  
		return documentCategorieDao.findAll();
	}
	
	@PostMapping(value="/documentCategorie")
	public void saveDocumentCategorie(@RequestBody DocumentCategorie documentCategorie){	
	DocumentCategorie documentCat=documentCategorieDao.save(documentCategorie);
		
		logClass.addTrack(
				"ajout","Evénement de log ajout document categories  "+documentCat.getDocumentCategorieId() + "-"+documentCat.getDocumentCategorieLibelle(),/*vb.getPerson(),*/ "INFO");
		
	}
	
	@PutMapping(value="/updatedocumentCategorie/{id}")
	public void updateDocumentCategorie(@PathVariable(name = "id") Integer documentCategorieId, @RequestBody DocumentCategorie documentCategorie){
		System.out.println("#### documentCategorie == " + documentCategorie.toString());	
		DocumentCategorie documentCat= documentCategorieDao.save(documentCategorie);
		
		logClass.addTrack(
				"modification","Evénement de log modification document categories "+documentCat.getDocumentCategorieId() + "-"+documentCat.getDocumentCategorieLibelle(),/*vb.getPerson(),*/ "INFO");
	}
	
	@DeleteMapping(value="/deletedocumentCategorie/{id}")
	public void deleteDocumentCategorie(@PathVariable(name = "id") Integer documentCategorie){	
		DocumentCategorie documentCat= documentCategorieDao.findByDocumentCategorieId(documentCategorie); 
		documentCategorieDao.delete(documentCategorie);	
		
		logClass.addTrack(
		"suppression","Evénement de log suppression document categories "+documentCat.getDocumentCategorieId() + "-"+documentCat.getDocumentCategorieLibelle(),/*vb.getPerson(),*/ "INFO");

	}
	
	@GetMapping(value="/finddocumentCategorie",  produces = "application/json")
	public Iterable<DocumentCategorie> findDocumentCategorieByType(@RequestBody DocumentTypeCategorie documentTypeCategorie){		
		logClass.addTrack(
					"consultation","Evénement de log consultation list document categories "+documentTypeCategorie.getDocumentTypeCategorieId(),/*vb.getPerson(),*/ "INFO");
		return documentCategorieDao.findDocumentCategorieByType(documentTypeCategorie);
	}
	
	@GetMapping(value="/finddocumentCategorie/{id}",  produces = "application/json")
	public DocumentCategorie findDocumentCategorieByType(@PathVariable(name = "id") Integer id){
		DocumentCategorie docuCat = documentCategorieDao.findByDocumentCategorieId(id);
		
		logClass.addTrack(
				"consultation","Evénement de log consultation document categories "+docuCat.getDocumentCategorieId()+ "-"+docuCat.getDocumentCategorieLibelle(),/*vb.getPerson(),*/ "INFO");
		
		
		return docuCat;
	}
}
