package com.xtensus.passosyf.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.xtensus.passosyf.entities.DomaineActivite;
import com.xtensus.passosyf.entities.Etat;
import com.xtensus.passosyf.repositories.EtatRepository;
import com.xtensus.passosyf.services.DomaineActiviteService;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping(path = "api")
public class DomaineActiviteController {

	@Autowired
	private DomaineActiviteService domaineActiviteService;
	@Autowired
	private EtatRepository etatRepository;

	public DomaineActiviteController(DomaineActiviteService domaineActiviteService) {
		this.domaineActiviteService = domaineActiviteService;
	}
	
	@GetMapping(value = "/domaineActivites", produces = "application/json")
	public List<DomaineActivite> getAllDomaineActivite() {
		return domaineActiviteService.getListDomaineActivite();
	}

	@GetMapping(value = "/domaineActivite/{id}", produces = "application/json")
	public DomaineActivite getDomaineActiviteById(@PathVariable int id) {
		return domaineActiviteService.findDomaineActiviteById(id);
	} 
	
	@PostMapping(value = "/domaineActivite", produces = "application/json")
	public void saveDomaineActivite( @RequestBody DomaineActivite domaineActivite) {
		//get Etat by id
		Optional<Etat> etat=etatRepository.findById(67);
		domaineActivite.setEtat(etat.get());
		domaineActiviteService.save(domaineActivite);
		
		
	}
	
	@PutMapping(value = "/domaineActivite/{id}", produces = "application/json")
	public void updateDomaineActivite( @RequestBody DomaineActivite domaineActivite, @PathVariable int id) {
		domaineActiviteService.update(domaineActivite, id);
	}
	
	@DeleteMapping(value = "/domaineActivite/{id}", produces = "application/json")
	public void deleteDomaineActivite(@PathVariable int id) {
		domaineActiviteService.delete(id);
	}

}
