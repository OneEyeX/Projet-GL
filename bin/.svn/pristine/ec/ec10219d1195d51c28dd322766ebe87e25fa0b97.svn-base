package com.xtensus.passosyf.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.xtensus.passosyf.entities.ParticipantType;
import com.xtensus.passosyf.services.ParticipantTypeService;


@CrossOrigin("*")
@RestController
@RequestMapping(path = "ParticipantType")
public class ParticipantTypeControler {

	@Autowired
	private ParticipantTypeService participantTypeService;

	@GetMapping(path = "/participanttype")
	public List<ParticipantType> getListeParticipantType() {
		List<ParticipantType> listeParticipantType = participantTypeService.getListParticipantType();
		return listeParticipantType;
	}

	@PostMapping(path = "/ajoutparticipanttype")
	public ResponseEntity<ParticipantType> save(@RequestBody ParticipantType participantType) {
		ParticipantType typeParticipant = participantTypeService.save(participantType);
		return new ResponseEntity<>(typeParticipant, HttpStatus.CREATED);
	}
	@PutMapping(path = "/updatetypeparticipant")
	public ResponseEntity<ParticipantType> updateTypeParticipant(@RequestBody ParticipantType participantType) {
		ParticipantType typeParticipant = participantTypeService.updateParticipantType(participantType);
		return new ResponseEntity<>(typeParticipant, HttpStatus.OK);
	}
	
	@DeleteMapping(path = "/deleteparticipanttype/{idP}")
	public void deleteParticipantType(@PathVariable(name = "idP") Integer participantTypeId) {
		participantTypeService.deleteById(participantTypeId);
	}
	
	
	@GetMapping(path = "/findtypeparticipant/{idP}")
	public ResponseEntity<ParticipantType> findParticipantTypeByID(@PathVariable(name = "idP") Integer participantTypeId) {
		ParticipantType typeParticipant=participantTypeService.findParticipantTypeById(participantTypeId);
		return  new ResponseEntity<>(typeParticipant,HttpStatus.OK);
	}
	
}
