package com.xtensus.passosyf.aop;

import java.io.IOException;

import javax.annotation.PostConstruct;
import javax.mail.MessagingException;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.xtensus.passosyf.controllers.EnvoiMail;

@Aspect
@Component
public class TracingAfterReturningAdvice {
	
	@Autowired
	private EnvoiMail envoiMail;
	
	
	
//	public TracingAfterReturningAdvice(EnvoiMail envoiMail) {
//		super();
//		this.envoiMail = envoiMail;
//	}


	@PostConstruct
	public void Initialize() {

		System.out.println("****Lancement Aspect avec succes****");
	}
	
	
	@Before(value = "execution(* com.xtensus.passosyf.controllers.ReunionControlleur.envoyerConvocation(..)) and args()")
	public void beforeAdviceAfficherCivilite(JoinPoint joinPoint) throws IOException, MessagingException {
		System.out.println("Before method:" + joinPoint.getSignature());

//		System.out.println("Creating Employee with name - " + civilite.getCiviliteLibelle() + " and id - " + civilite.getCiviliteId());
		
		envoiMail.EnvoiMail();
	}

}
