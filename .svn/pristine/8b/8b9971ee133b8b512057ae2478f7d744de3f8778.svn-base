package com.xtensus.passosyf.entities;

// Generated 23 aoï¿½t 2012 12:50:52 by Hibernate Tools 3.4.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Commission generated by hbm2java
 */
@Entity
@Table(name = "commission")
public class Commission implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6803983363688385110L;
	private Integer commissionReference;
	private String commissionIntitule;
	private String commissionObjet;
	private Integer commisssionPresidentMatricule;
	private Date commissionDateCreation;
	private Integer commissionNbrMembres;
	private CommissionType commissionType;
	private Etat etatId;
//	private Set<Utilisateurs> utilisateurses = new HashSet<Utilisateurs>(0);
//	private Set<Appeloffre> appeloffres = new HashSet<Appeloffre>(0);

	public Commission() {
	}

//	public Commission(Etat etat) {
//		this.etat = etat;
//	}

	
	

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "commissionReference",unique = true, nullable = false)
	public Integer getCommissionReference() {
		return this.commissionReference;
	}

	public Commission(Integer commissionReference, String commissionIntitule, String commissionObjet,
			Integer commisssionPresidentMatricule, Date commissionDateCreation, Integer commissionNbrMembres,
			CommissionType commissionType, Etat etatId) {
		this.commissionReference = commissionReference;
		this.commissionIntitule = commissionIntitule;
		this.commissionObjet = commissionObjet;
		this.commisssionPresidentMatricule = commisssionPresidentMatricule;
		this.commissionDateCreation = commissionDateCreation;
		this.commissionNbrMembres = commissionNbrMembres;
		this.commissionType = commissionType;
		this.etatId = etatId;
	}

	public void setCommissionReference(Integer commissionReference) {
		this.commissionReference = commissionReference;
	}



	public String getCommissionIntitule() {
		return this.commissionIntitule;
	}

	public void setCommissionIntitule(String commissionIntitule) {
		this.commissionIntitule = commissionIntitule;
	}

	
	public String getCommissionObjet() {
		return this.commissionObjet;
	}

	public void setCommissionObjet(String commissionObjet) {
		this.commissionObjet = commissionObjet;
	}

	@Column(name = "commisssionPresidentMatricule")
	public Integer getCommisssionPresidentMatricule() {
		return this.commisssionPresidentMatricule;
	}

	public void setCommisssionPresidentMatricule(
			Integer commisssionPresidentMatricule) {
		this.commisssionPresidentMatricule = commisssionPresidentMatricule;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(length = 19)
	public Date getCommissionDateCreation() {
		return this.commissionDateCreation;
	}

	public void setCommissionDateCreation(Date commissionDateCreation) {
		this.commissionDateCreation = commissionDateCreation;
	}

	public Integer getCommissionNbrMembres() {
		return this.commissionNbrMembres;
	}

	public void setCommissionNbrMembres(Integer commissionNbrMembres) {
		this.commissionNbrMembres = commissionNbrMembres;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "commissionType",nullable = false)
	public CommissionType getCommissionType() {
		return commissionType;
	}

	public void setCommissionType(CommissionType commissionType) {
		this.commissionType = commissionType;
	}

//	@JsonProperty(access = Access.WRITE_ONLY)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "etatId",nullable = false)
	public Etat getEtatId() {
		return etatId;
	}

	public void setEtatId(Etat etatId) {
		this.etatId = etatId;
	}

//
//	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "commissions")
//	public Set<Utilisateurs> getUtilisateurses() {
//		return this.utilisateurses;
//	}
//
//	public void setUtilisateurses(Set<Utilisateurs> utilisateurses) {
//		this.utilisateurses = utilisateurses;
//	}
//
//	@ManyToMany(fetch = FetchType.LAZY)
//	@JoinTable(name = "commissionappeloffre", catalog = "xtensusgmp03", joinColumns = { @JoinColumn(name = "commissionReference", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "appelOffreReference", nullable = false, updatable = false) })
//	public Set<Appeloffre> getAppeloffres() {
//		return this.appeloffres;
//	}
//
//	public void setAppeloffres(Set<Appeloffre> appeloffres) {
//		this.appeloffres = appeloffres;
//	}
	

}
